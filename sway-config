# Default config for sway
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.

### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4
# Home row direction keys, like vim
# set $left h
# set $down j
# set $up k
# set $right l
# Your preferred terminal emulator
set $term alacritty
# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
# set $menu dmenu_path | dmenu | xargs swaymsg exec --
for_window [app_id="^launcher$"] floating enable, sticky enable, resize set 30 ppt 60 ppt
set $menu $term --class=launcher -e $HOME/.local/bin/sway-launcher-desktop.sh

set $calc flatpak run io.github.Qalculate.qalculate-qt

set $lock swaylock -f -i $HOME/.config/sway/background.png -s fill \
    --clock --timestr %r --datestr %F \
    --fade-in 0.5 \
    --effect-blur 10x10 --effect-greyscale

### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
output * bg $HOME/.config/sway/background.png fill

output DP-1 position 0,0
output eDP-1 position 1920,0
#
# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs

### Idle configuration
#
# Example configuration:
#
exec swayidle \
         timeout 300 '$lock' \
         timeout 600 'swaymsg "output * dpms off"' resume 'swaymsg "output * dpms on"' # \
         # before-sleep '$lock'

# Note: this doesn't work correctly when you open meet in a new tab,
# then move it to a new window, as it sets the inhibit_idle flag on
# both the original chrome window and the meet window, then it never
# leaves the original chrome window, so idle is inhibited until chrome
# restarts.
# for_window [class="Google-chrome" title="Meet - .* - Google Chrome"] inhibit_idle visible

#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

exec mako

workspace_layout tabbed

### Input configuration
#
# Example configuration:
#
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

input "2:14:ETPS/2_Elantech_Touchpad" {
   tap disabled
   click_method clickfinger
   tap_button_map lrm
}

input "1133:45077:M720_Triathlon_Mouse" {
   pointer_accel 0
}

### Key bindings
#
# Basics:
#
    # Start a terminal
    bindsym $mod+Return exec $term

    # Kill focused window
    bindsym $mod+Shift+q kill

    # Start your launcher
    bindsym $mod+d exec $menu

    # Lock the screen
    bindsym $mod+l exec $lock

    bindsym $mod+c exec $calc

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+c reload

    bindsym $mod+x exec echo "" | dmenu | xargs swaymsg

    # Exit sway (logs you out of your Wayland session)
    bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -b 'Yes, exit sway' 'swaymsg exit'

    # Backlight
    # 0x1008FF2B is XF86WakeUp
    bindsym 0x1008FF2B+F6 exec light -A 5
    bindsym 0x1008FF2B+F5 exec light -U 5
#
# Moving around:
#
    # Move your focus around
    # bindsym $mod+$left focus left
    # bindsym $mod+$down focus down
    # bindsym $mod+$up focus up
    # bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    # bindsym $mod+Shift+$left move left
    # bindsym $mod+Shift+$down move down
    # bindsym $mod+Shift+$up move up
    # bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right
#
# Workspaces:
#
    # Switch to workspace
    bindsym $mod+1 workspace number 1
    bindsym $mod+2 workspace number 2
    bindsym $mod+3 workspace number 3
    bindsym $mod+4 workspace number 4
    bindsym $mod+5 workspace number 5
    bindsym $mod+6 workspace number 6
    bindsym $mod+7 workspace number 7
    bindsym $mod+8 workspace number 8
    bindsym $mod+9 workspace number 9
    bindsym $mod+0 workspace number 10
    # Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace number 1
    bindsym $mod+Shift+2 move container to workspace number 2
    bindsym $mod+Shift+3 move container to workspace number 3
    bindsym $mod+Shift+4 move container to workspace number 4
    bindsym $mod+Shift+5 move container to workspace number 5
    bindsym $mod+Shift+6 move container to workspace number 6
    bindsym $mod+Shift+7 move container to workspace number 7
    bindsym $mod+Shift+8 move container to workspace number 8
    bindsym $mod+Shift+9 move container to workspace number 9
    bindsym $mod+Shift+0 move container to workspace number 10
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.

    bindsym $mod+equal exec 'swaymsg -t get_workspaces | jq -r ".[].name" | dmenu | xargs -I % swaymsg workspace "%"'
    bindsym $mod+Shift+equal exec 'swaymsg -t get_workspaces | jq -r ".[].name" | dmenu | xargs -I % swaymsg move container to workspace "%", workspace "%"'

    bindsym $mod+Mod1+Left move workspace to output left
    bindsym $mod+Mod1+Right move workspace to output right

    bindsym $mod+Ctrl+Left focus output left
    bindsym $mod+Ctrl+Right focus output right

    bindsym Mod1+Tab workspace next_on_output
    bindsym Mod1+Shift+Tab workspace prev_on_output
#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show

#
# Screenshots:
#
    # To clipboard
    # Currently Active Window
    bindsym $mod+p       exec grimshot --notify copy active
    # Select an area
    bindsym $mod+Shift+p exec grimshot --notify copy area
    # Entire active screen
    bindsym $mod+Mod1+p  exec grimshot --notify copy output
    # Select a window
    bindsym $mod+Ctrl+p  exec grimshot --notify copy window

    # To file
    # Currently Active Window
    bindsym $mod+i       exec grimshot --notify save active
    # Select an area
    bindsym $mod+Shift+i exec grimshot --notify save area
    # Entire active screen
    bindsym $mod+Mod1+i  exec grimshot --notify save output
    # Select a window
    bindsym $mod+Ctrl+i  exec grimshot --notify save window

#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    # bindsym $left resize shrink width 10px
    # bindsym $down resize grow height 10px
    # bindsym $up resize shrink height 10px
    # bindsym $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    bindsym Shift+Left resize shrink width 10px
    bindsym Shift+Down resize grow height 10px
    bindsym Shift+Up resize shrink height 10px
    bindsym Shift+Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
bar {
    swaybar_command waybar
    # position top

    # # When the status_command prints a new line to stdout, swaybar updates.
    # # The default just shows the current date and time.
    # status_command while date +'%Y-%m-%d %l:%M:%S %p'; do sleep 1; done

    # colors {
    #     statusline #ffffff
    #     background #323232
    #     inactive_workspace #32323200 #32323200 #5c5c5c
    # }
}

include /etc/sway/config.d/*

exec systemctl --user import-environment DISPLAY WAYLAND_DISPLAY SWAYSOCK
exec hash dbus-update-activation-environment 2>/dev/null && \
     dbus-update-activation-environment --systemd DISPLAY WAYLAND_DISPLAY SWAYSOCK

# Can't figure out how to disambiguate between a chrome window with
# just meet and a chrome window with the current tab on meet

# for_window [title="Meet - (.*) - Google Chrome"] move container to workspace meet, workspace meet

for_window [app_id="org.gnome.Weather"] floating enable
for_window [title="DevTools"] floating enable
for_window [title=".* is sharing your screen\.$"] move to scratchpad
for_window [title="Qalculate.*"] floating enable, sticky enable
